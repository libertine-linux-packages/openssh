#!/bin/sh
# This file is part of libertine linux's package openssh. It is subject to the license terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/openssh/master/COPYRIGHT. No part of libertine linux's package openssh, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2016 The developers of libertine linux's package openssh. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/libertine-linux-packages/openssh/master/COPYRIGHT.


set -e
set -u
set -f


ssh_authorized_keys_main()
{
	# %u %h %t %f %k
	if [ $# -ne 5 ]; then
		exit 1
	fi
	
	local userName="$1"
	local userHomeFolderPath="$2"
	local keyOfferedForAuthenticationType="$3"
	local keyOfferedForAuthenticationFingerprint="$4"
	local keyOfferedForAuthentication="$5"
	
	if [ -z "$userName" ]; then
		exit 0
	fi
	
	if [ -z "$userHomeFolderPath" ]; then
		exit 0
	fi
	
	if [ ! -d "$userHomeFolderPath" ]; then
		exit 0
	fi
	
	# Retrieve the 'ssshPublicKey' attribute from LDAP for this user
	
	# We should probably share the same LDAP configuration that's used by sudo
	# See also https://github.com/AndriiGrytsenko/openssh-ldap-publickey
	
	# Produce zero or more lines of AUTHORIZED_KEYS output - perhaps with the actual directory to access
	
	# eg     ssh-rsa some_long_long_key user@hostname
}

ssh_authorized_keys_main "$@"
